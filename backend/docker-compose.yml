version: "3.8"

services:

  api_gateway:
    build:
      context: ./Api_gateway/
      dockerfile: Dockerfile
    container_name: api_gateway
    restart: on-failure
    ports:
      - "8000:8000"

  tuzilastvo_service:
    image: tuzilastvo_service
    build:
      context: .
      dockerfile: ./Tuzilastvo/Dockerfile
    restart: always
    container_name: 'tuzilastvo_service'
    hostname: 'tuzilastvo_service'
    environment:
      - MONGO_DB_URI=${TUZILASTVO_DB_URI}
      - app_port=${TUZILASTVO_SERVICE_PORT}
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
    depends_on:
      tuzilastvo_db:
        condition: service_healthy


  tuzilastvo_db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: myDB
    # Docker healtcheck - checks if database is "alive"
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
    volumes:
      - mongo_store:/data/mongoTuzilastvo
    ports:
      - 27017:27017

  mup_service:
    image: mup_service
    build: 
      context: .
      dockerfile: ./MUP/Dockerfile
    restart: always
    container_name: 'mup_service'
    hostname: 'mup_service'
    depends_on:
      mup_db:
        condition: service_healthy

  mup_db:
    image: mongo
    restart: always
    hostname: mup_db
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
    volumes:
      - mongo_store:/data/mongoMup
    ports:
      - 27018:27017



  sudstvo_service:
    image: sudstvo_service
    build:
      context: .
      dockerfile: ./Sudstvo/Dockerfile
    restart: always
    container_name: 'sudstvo_service'
    hostname: 'sudstvo_service'
    environment:
      - MONGO_DB_URI=${SUDSTVO_DB_URI}
      - app_port=${SUDSTVO_SERVICE_PORT}
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
    depends_on:
      sudstvo_db:
        condition: service_healthy


  sudstvo_db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: myDB1
    # Docker healtcheck - checks if database is "alive"
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
    volumes:
      - mongo_store:/data/mongoSudstvo
    ports:
      - 27019:27017


  gp_service:
    image: gp_service
    build:
      context: .
      dockerfile: ./GranicnaPolicija/Dockerfile
    restart: always
    container_name: 'gp_service'
    hostname: 'gp_service'
    environment:
      - MONGO_DB_URI=${GP_DB_URI}
      - app_port=${GP_SERVICE_PORT}
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
    depends_on:
      gp_db:
        condition: service_healthy

  gp_db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: myGpDB
    # Docker healtcheck - checks if database is "alive"
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
    volumes:
      - mongo_store:/data/mongoGp
    ports:
      - 27020:27017

volumes:
    mongo_store:

networks:
  mup: 
    driver: bridge